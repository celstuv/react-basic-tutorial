[{"C:\\wamp64\\www\\tutorial\\src\\index.js":"1","C:\\wamp64\\www\\tutorial\\src\\books.js":"2","C:\\wamp64\\www\\tutorial\\src\\Book.js":"3"},{"size":439,"mtime":1611309702127,"results":"4","hashOfConfig":"5"},{"size":589,"mtime":1611310485261,"results":"6","hashOfConfig":"5"},{"size":758,"mtime":1611311189786,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"1c971zz",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"C:\\wamp64\\www\\tutorial\\src\\index.js",["15"],"C:\\wamp64\\www\\tutorial\\src\\books.js",[],"C:\\wamp64\\www\\tutorial\\src\\Book.js",["16","17","18"],"import React from 'react';\r\n\r\n\r\nconst Book = ({ img, title, author }) => {\r\n\r\n  // attribute, eventHandler\r\n  //onClick, onMouseOver\r\n  const clickHandler = (e) => {\r\n    alert('Hello World');\r\n    console.log(e.target);\r\n  };\r\n\r\n  const complexeExample = (author) => {\r\n    console.log(author);\r\n  }\r\n\r\n  return (\r\n    <article className=\"book\" onMouseOver={() => {\r\n        console.log(title)\r\n      }}>\r\n      <img src={img} alt=\"image\" />\r\n      <h1 onClick={() => console.log(title)}>{title}</h1>\r\n      <h4>{author}</h4>\r\n{ /*     <button type=\"button\" onClick={clickHandler}>Exemple</button><br />\r\n      <button type=\"button\" onClick={() => complexeExample(author)}>more complexe example</button>*/ } \r\n   </article>);\r\n};\r\n\r\n\r\nexport default Book;\r\n",{"ruleId":"19","severity":1,"message":"20","line":15,"column":8,"nodeType":"21","messageId":"22","endLine":15,"endColumn":17,"fix":"23"},{"ruleId":"24","severity":1,"message":"25","line":8,"column":9,"nodeType":"26","messageId":"27","endLine":8,"endColumn":21},{"ruleId":"24","severity":1,"message":"28","line":13,"column":9,"nodeType":"26","messageId":"27","endLine":13,"endColumn":24},{"ruleId":"29","severity":1,"message":"30","line":21,"column":7,"nodeType":"31","endLine":21,"endColumn":36},"no-whitespace-before-property","Unexpected whitespace before property map.","MemberExpression","unexpectedWhitespace",{"range":"32","text":"33"},"no-unused-vars","'clickHandler' is assigned a value but never used.","Identifier","unusedVar","'complexeExample' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",[238,240],"."]